---
import { db } from "@lib/database";
import { location } from "@lib/database/schema/location";
import Cookies from "@lib/cookies";

import * as m from "@paraglide/messages";

import { Icon } from "astro-icon/components";

let current_location = (Astro.cookies.get(Cookies.current_location) || {})?.value;

const locations = await db.select().from(location).orderBy(location.name);
---

<div class="flex flex-row gap-4 items-center justify-between p-2 px-4 bg-gray-100">
  <div class="flex flex-row items-center gap-4">
    <h1><a href="/">{m.navbar_title()}</a></h1>

    {
      locations.length === 0 ? (
        <span class="font-bold">{m.no_locations()}</span>
      ) : (
        <form method="POST" action="/api/locations/current" id="location-picker" class="flex flex-col gap-2">
          <select name="chosen_location" onchange="this.form.submit()" required value={current_location}>
            {locations.map((location) => {
              const is_current_location = location.name === current_location;

              return (
                <option value={location.name} selected={is_current_location}>
                  {location.name}
                </option>
              );
            })}
          </select>
        </form>
      )
    }
  </div>
  <ul class="flex flex-row gap-2">
    {
      [
        ["/locations", m.locations(), "mdi:location"],
        ["/employees", m.employees(), "mdi:people"],
        ["/shifts", m.shifts(), "mdi:clock"],
      ].map(([url, name, icon]) => {
        return (
          <li>
            <a href={url} class="flex flex-row items-center gap-2">
              <Icon name={icon} class="text-xl" />
              <span class="hidden lg:block">{name}</span>
            </a>
          </li>
        );
      })
    }
  </ul>
</div>
