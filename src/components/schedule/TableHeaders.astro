---
interface Props {
  show_total_hours?: boolean;
}

const { show_total_hours = false } = Astro.props;

const dayFormat = new Intl.DateTimeFormat(Astro.preferredLocale || "en", { weekday: "short" });

const now = new Date();
const year = Astro.cookies.get("year")?.number() || now.getFullYear();
const month = Astro.cookies.get("month")?.number() || now.getMonth() + 1;

const days_count = new Date(year, month, 0).getDate();
---

<tr>
  <td class="font-bold text-left px-4">Counts on shifts</td>
  {
    Array.from(Array(days_count), (_, i) => {
      i = i + 1;
      const _day = new Date(year, month - 1, i);
      const is_today = now.setHours(0, 0, 0, 0) == _day.setHours(0, 0, 0, 0);
      const is_holiday = [0, 6].includes(_day.getDay());

      return (
        <td
          class:list={[
            "text-center border-[1px] border-b-0",
            {
              "bg-custom-holiday text-gray-100": is_holiday,
              "bg-gray-300 text-gray-800": is_today,
              "bg-gray-50 text-gray-800": !is_holiday && !is_today,
            },
          ]}
        >
          {i}
          <br />
          {dayFormat.format(_day)}
        </td>
      );
    })
  }
  {show_total_hours ? <td class="px-2 border-[1px]">Total hours</td> : null}
</tr>
