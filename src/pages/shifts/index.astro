---
import Subpage from "@layouts/Subpage.astro";

import { db } from "@lib/database";
import { shift, shiftTypes } from "@lib/database/schema";

import Remove from "@components/buttons/Remove.svelte";
import { ColorPicker, Input, Select, Submit } from "@components/form/";

import * as m from "@paraglide/messages";

const shifts = await db.select().from(shift).orderBy(shift.id);
---

<Subpage title="Shifts">
  <div class="flex flex-col gap-4">
    <h3 class="font-bold text-3xl">{m.add_shift()}:</h3>
    <form method="POST" action="/api/shifts" class="flex flex-col gap-8">
      <div class="grid grid-cols-1 gap-4 sm:grid-cols-3 items-center">
        <Input name="label" label={m.label()} type="text" class="sm:col-span-2" />
        <Select name="shift_type" label={m.shift_type()}>
          {
            shiftTypes.enumValues.map((shiftType) => {
              return <option value={shiftType}>{shiftType}</option>;
            })
          }
        </Select>
        <Input name="start" label={m.shift_start()} type="time" required />
        <Input name="end" label={m.shift_end()} type="time" required />
        <ColorPicker label={m.color()} value="#ffffff" />
      </div>
      <Submit label={m.add()} class="col-span-2" />
    </form>

    {
      shifts.length === 0 ? (
        <span class="font-bold text-xl text-center">{m.no_shifts()}</span>
      ) : (
        <div class="flex flex-col gap-4">
          <div class="grid grid-cols-2 lg:grid-cols-4 gap-4">
            {shifts.map((shift) => {
              return (
                <div class="flex flex-col justify-between gap-4 rounded-xl p-4 text-stone-900 dark:text-stone-100 bg-stone-200 dark:bg-stone-900">
                  <div class="flex flex-col gap-2">
                    <form method="POST" action="/api/shifts/update" class="flex flex-col gap-2">
                      <Input name="label" label={m.label()} type="text" value={shift.label!} onchange="this.form.submit()" />
                      <Select name="shift_type" label={m.shift_type()}>
                        {shiftTypes.enumValues.map((shiftType) => {
                          return (
                            <option value={shiftType} selected={shift.shiftType == shiftType}>
                              {shiftType}
                            </option>
                          );
                        })}
                      </Select>
                      <Input name="start" label={m.shift_start()} type="time" value={shift.start} onchange="this.form.submit()" />
                      <Input name="end" label={m.shift_end()} type="time" value={shift.end} onchange="this.form.submit()" />
                      <ColorPicker label={m.color()} value={shift.color!} onchange="this.form.submit()" />
                      <input name="shift_id" value={shift.id} hidden />
                      <input type="submit" hidden />
                    </form>
                  </div>
                  <div class="flex flex-row justify-end">
                    <form method="POST" action="/api/shifts/delete">
                      <input name="shift_id" value={shift.id} hidden />

                      <Remove />
                    </form>
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      )
    }
  </div>
</Subpage>
