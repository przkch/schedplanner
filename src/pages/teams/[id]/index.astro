---
import Subpage from "@layouts/Subpage.astro";

import { db } from "@lib/database";
import { employee, group, team } from "@lib/database/schema";

import { eq } from "drizzle-orm";
import * as m from "@paraglide/messages";
import { setLanguageTag } from "@paraglide/runtime";

setLanguageTag((Astro.preferredLocale || "en") as any);

const { id } = Astro.params;

const _team = (
  await db
    .select()
    .from(team)
    .where(eq(team.id, Number(id)))
)[0];

const groups = await db.select().from(group).where(eq(group.teamId, _team.id)).orderBy(group.name);

const employees = await db
  .select({
    id: employee.id,
    firstName: employee.firstName,
    lastName: employee.lastName,
    teamId: employee.teamId,
    groupId: employee.groupId,
    groupName: group.name,
  })
  .from(employee)
  .where(eq(employee.teamId, _team.id))
  .leftJoin(group, eq(employee.groupId, group.id))
  .orderBy(employee.lastName, employee.firstName);
---

<Subpage title=`Team ${_team.name}`>
  <div class="flex flex-col gap-8">
    <div class="flex flex-col gap-4">
      <h3 class="font-bold text-3xl">Groups</h3>
      <form method="POST" action=`/api/teams/${_team.id}/groups` class="flex flex-row gap-2">
        <input type="text" name="name" placeholder={m.name()} class="input input-bordered w-full" required />
        <button type="submit" class="btn">
          {m.add()}
        </button>
      </form>

      {
        groups.length === 0 ? (
          <span class="font-bold text-xl text-center">No groups</span>
        ) : (
          <table class="table w-full">
            <thead>
              <tr>
                <th>{m.name()}</th>
                <th />
              </tr>
            </thead>
            <tbody>
              {groups.map((group) => {
                return (
                  <tr>
                    <td>
                      <form
                        method="POST"
                        action={`/api/teams/${_team.id}/groups/${group.id}/rename`}
                        class="flex flex-row justify-between items-center gap-4"
                      >
                        <input type="text" name="first_name" value={group.name} class="bg-transparent w-full" autocomplete="off" />
                        <input type="submit" hidden />
                      </form>
                    </td>
                    <td class="flex flex-row items-center justify-end">
                      <form method="POST" action={`/api/teams/${_team.id}/groups/${group.id}/delete`}>
                        <button type="submit" class="btn btn-error">
                          {m.remove()}
                        </button>
                      </form>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        )
      }
    </div>
    <div class="flex flex-col gap-4">
      <h3 class="font-bold text-3xl">Employees</h3>
      <form method="POST" action={`/api/teams/${_team.id}/employees`} class="flex flex-row gap-2">
        <div class="grid grid-cols-1 gap-6 lg:grid-cols-3 w-full">
          <input type="text" name="first_name" placeholder={m.first_name()} class="input input-bordered" required />
          <input type="text" name="last_name" placeholder={m.last_name()} class="input input-bordered" required />
          <select name="group_id" class="select select-bordered">
            {
              groups.map((group) => {
                return <option value={group.id}>{group.name}</option>;
              })
            }
          </select>
        </div>
        <button type="submit" class="btn">
          {m.add()}
        </button>
      </form>
      {
        employees.length === 0 ? (
          <span class="font-bold text-xl text-center">{m.no_employees()}</span>
        ) : (
          <table class="table w-full">
            <thead>
              <tr>
                <th>{m.first_name()}</th>
                <th>{m.last_name()}</th>
                <th>Group</th>
                <th />
              </tr>
            </thead>
            <tbody>
              {employees.map((employee) => {
                return (
                  <tr>
                    <td>
                      <form
                        method="POST"
                        action={`/api/teams/${employee.teamId}/employees/${employee.id}/rename`}
                        class="flex flex-row justify-between items-center gap-4"
                      >
                        <input type="text" name="first_name" value={employee.firstName} class="input input-bordered w-full" autocomplete="off" />
                        <input type="submit" hidden />
                      </form>
                    </td>
                    <td>
                      <form
                        method="POST"
                        action={`/api/teams/${employee.teamId}/employees/${employee.id}/rename`}
                        class="flex flex-row justify-between items-center gap-4"
                      >
                        <input type="text" name="last_name" value={employee.lastName} class="input input-bordered w-full m-0" autocomplete="off" />
                        <input type="submit" hidden />
                      </form>
                    </td>
                    <td>
                      <form
                        method="POST"
                        action={`/api/teams/${employee.teamId}/employees/${employee.id}/move`}
                        class="flex flex-row justify-between items-center gap-4"
                      >
                        <select name="group_id" onchange="this.form.submit()" class="select">
                          {groups.map((group) => {
                            return (
                              <option value={group.id} selected={group.id === employee.groupId}>
                                {group.name}
                              </option>
                            );
                          })}
                        </select>
                      </form>
                    </td>
                    <td>
                      <div class="flex flex-row items-center justify-end">
                        <form method="POST" action={`/api/teams/${employee.teamId}/employees/${employee.id}/delete`}>
                          <button type="submit" class="btn btn-error">
                            {m.remove()}
                          </button>
                        </form>
                      </div>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        )
      }
    </div>
  </div>
</Subpage>
